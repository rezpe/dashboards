"use strict";angular.module("tiPortal3App",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","adf","adf.structures.base","adf.widget.clock","adf.widget.Graph","ui.codemirror","uiGmapgoogle-maps","chart.js","ngFileSaver","LocalStorageModule"]).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("tiPortal3App").controller("MainCtrl",["FileSaver","$scope","$rootScope","localStorageService",function(FileSaver,$scope,$rootScope,localStorageService){$scope.$watch("token",function(newvalue,oldvalue){$rootScope.token=newvalue,localStorageService.set("token",newvalue)}),$scope.token=localStorageService.get("token"),$scope.saveModel=function(){var blob=new Blob([JSON.stringify($scope.dashboard.model)],{type:"text/plain;charset=utf-8"});FileSaver.saveAs(blob,"dashboard.json")};var handleFiles=function(){var selected_file=$("#inputFile")[0].files[0],r=new FileReader;r.onload=function(e){var contents=e.target.result,load=JSON.parse(contents);$scope.$apply(function(){localStorageService.set("dashboard",JSON.stringify(load)),$scope.dashboard={model:load}})},r.readAsText(selected_file)};$("#inputFile").change(handleFiles),$scope.loadModel=function(){$("#inputFile").trigger("click")};var model=JSON.parse(localStorageService.get("dashboard"));model||(model={rows:[{columns:[{styleClass:"col-md-4",widgets:[]},{styleClass:"col-md-8",widgets:[]}]}]}),$scope.dashboard={model:model},$scope.$on("adfDashboardChanged",function(event,name,model){localStorageService.set(name,model),localStorageService.set("dashboard",JSON.stringify(model))})}]),angular.module("tiPortal3App").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("adf.widget.Graph",["adf.provider"]).config(["dashboardProvider",function(dashboardProvider){dashboardProvider.widget("Graph",{title:"Graph",description:"It shows a graph",templateUrl:"views/view.html",reload:!0,controller:"GraphCtrl",resolve:{data:function(config,$http,$q,$rootScope){$rootScope.parameters||($rootScope.parameters={});var deferred=$q.defer();if(config.cache)return setTimeout(function(){deferred.resolve(config.data)},500),deferred.promise;var token=$rootScope.token;$http.defaults.headers.common.Authorization="Token "+token;var json="application/json";$http.defaults.headers.common.Accept=json,$http.defaults.headers.common["Content-Type"]=json;var url=config.url,param=config.param,totalUrl=url+param;return $http.get(totalUrl).success(function(data){deferred.resolve(data)}).error(function(){deferred.reject()}),deferred.promise}},edit:{templateUrl:"views/edit.html",controller:"EditGraphCtrl"}})}]).controller("GraphCtrl",["$scope","data","config",function($scope,data,config){data&&($scope.chartType=config.chartType,"Table"==config.chartType&&($scope.header=eval(config.headerFormula),$scope.data=eval(config.dataFormula)),"Text"==config.chartType&&($scope.data=JSON.stringify(data,null," ")),-1!=["Bar","Line","Pie","Doughnut","Radar","Polar"].indexOf(config.chartType)&&($scope.labels=eval(config.labelsFormula),$scope.data=eval(config.dataFormula)),-1!=["GoogleMap"].indexOf(config.chartType)&&($scope.map={center:{latitude:45,longitude:-73},zoom:parseInt(config.scale)},$scope.points=eval(config.pointsFormula),$scope.routes=eval(config.routesFormula)))}]).controller("EditGraphCtrl",["$scope","$http","config","$rootScope",function($scope,$http,config,$rootScope){$scope.jsedit={lineWrapping:!0,lineNumbers:!0,mode:"javascript"},$scope.sqledit={lineWrapping:!0,lineNumbers:!0,mode:"sql"},$scope.webservices=[{url:"",Description:"Custom Web Service",parameters:""},{url:"api/search_by_search_period",Description:"Search hits by look date API",parameters:"market+ptype+period+onds"},{page:"search-look-hits.html",url:"api/v1/search_look_hits",Description:"Search hits by look date API",parameters:"market+month+origin+destination"},{page:"search-travel-hits.html",url:"api/v1/search_travel_hits",Description:"Search hits by travel date API  ",parameters:"market+month+origin+destination+weekends"},{page:"search-hit-evolutions.html",url:"api/v1/search_hit_evolutions",Description:"Search hit evolutions API",parameters:"market+origin+destination"},{page:"search-hit-variations.html",url:"api/v1/search_hit_variations",Description:"Search hit variations API  ",parameters:"market+month_a+month_b"},{page:"booking-analysis-evolution.html",url:"api/v1/booking_agency_evolutions",Description:"Travel Agency Booking Analysis API - evolution  ",parameters:"booking_period"},{page:"booking-analysis-top-airlines.html",url:"api/v1/booking_agency_airlines",Description:"Travel Agency Booking Analysis API - top airlines",parameters:"booking_period+sort_by"},{page:"booking-analysis-top-countries.html",url:"api/v1/booking_agency_countries",Description:"Travel Agency Booking Analysis API - top countries  ",parameters:"booking_period+sort_by"},{page:"booking-analysis-top-onds.html",url:"api/v1/booking_agency_onds",Description:"Travel Agency Booking Analysis API - top O&Ds",parameters:"booking_period+sort_by"},{page:"booking-analysis-total.html",url:"api/v1/booking_agency_totals",Description:"Travel Agency Booking Analysis API - total per agency",parameters:"booking_period"},{page:"refdata-airlines.html",url:"api/airlines",Description:"Airline Reference API",parameters:"code"},{page:"refdata-aircrafts.html",url:"api/aircraft",Description:"Aircraft Reference API",parameters:"rest_obeject_id"},{page:"refdata-airports.html",url:"api/airports",Description:"Airport Reference API",parameters:"rest_obeject_id"},{page:"refdata-cities.html",url:"api/cities",Description:"Cities Reference API",parameters:"rest_obeject_id"},{page:"refdata-countries.html",url:"api/countries",Description:"Countries Reference API",parameters:"rest_obeject_id"}],$scope.setWebservice=function(){var item=$scope.selectedWebservice;config.url=item.url,config.param="?"+item.parameters.split("+").join("=*,")+"=*"},$scope.chartOptions=["Table","Bar","Line","Pie","Doughnut","Radar","Polar","GoogleMap"],$scope.callTI=function(){var token=$rootScope.token;$http.defaults.headers.common.Authorization="Token "+token;var json="application/json";$http.defaults.headers.common.Accept=json,$http.defaults.headers.common["Content-Type"]=json,$rootScope.parameters||($rootScope.parameters={});var url=config.url,param=config.param,totalUrl=url+param;$http.get(totalUrl).success(function(data){$scope.data=JSON.stringify(data,null," ")}).error(function(error){$scope.data=JSON.stringify(error,null," ")})},config.cache&&($scope.data=JSON.stringify(config.data)),$scope.toggleCache=function(){config.cache?(config.cache=!1,config.data="",$scope.data=""):(config.cache=!0,config.data=JSON.parse($scope.data))}}]),angular.module("adf.widget.Parameters",["adf.provider"]).config(["dashboardProvider",function(dashboardProvider){dashboardProvider.widget("Parameters",{title:"Parameters",description:"This widget lets you create and update parameters",templateUrl:"{widgetsPath}/scripts/services/paramview.html",controller:"ParamCtrl",edit:{templateUrl:"{widgetsPath}/scripts/services/paramedit.html",controller:"ParamEditCtrl"}})}]).controller("ParamCtrl",["$scope","config","$rootScope",function($scope,config,$rootScope){$rootScope.parameters||($rootScope.parameters={},config.parameters.forEach(function(value,index){$rootScope.parameters[value.name]=value.value}),$rootScope.$broadcast("widgetConfigChanged")),$scope.refresh=function(){config.parameters.forEach(function(value,index){$rootScope.parameters[value.name]=value.value}),$rootScope.$broadcast("widgetConfigChanged")}}]).controller("ParamEditCtrl",["$scope","config","$rootScope",function($scope,config,$rootScope){config.parameters||(config.parameters=[]),$scope.addParam=function(){config.parameters.push({name:$scope.inputname,value:""})},$scope.deleteParam=function(param){var index=config.parameters.indexOf(param);config.parameters.splice(index,1)}}]),angular.module("tiPortal3App").run(["$templateCache",function($templateCache){$templateCache.put("views/about.html","<p>This is the about view.</p>"),$templateCache.put("views/edit.html",'<form role="form"> <div class="form-group"> <h2>Web Service Description</h2>  <label for="sample">Enter url</label> <input type="text" class="form-control" ng-model="config.url"> <label for="sample">Enter param</label> <input type="text" class="form-control" ng-model="config.param"> </div> <div class="form-group"> <a ng-click="callTI()" ng-if="!config.cache"><span class="glyphicon glyphicon-eye-open"></span> Get Data</a> <a class="button button-primary" ng-click="toggleCache()" ng-if="!config.cache"><span class="glyphicon glyphicon-folder-open"></span> Cache the data</a> <a class="button button-primary" ng-click="toggleCache()" ng-if="config.cache"><span class="glyphicon glyphicon-remove-sign"></span> Delete the cache</a> </div> </form> <form role="form"> <div class="form-group"> <textarea class="col-md-12" name="name" rows="10" ng-model="data"></textarea> </div> </form> <form role="form"> <div class="form-group"> <label for="sample">Select ChartType</label>  <select ng-model="config.chartType" ng-options="item as item for item in chartOptions"></select> </div> </form> <form role="form" ng-if="[\'Bar\',\'Line\',\'Pie\',\'Doughnut\',\'Radar\'].indexOf(config.chartType)!=-1"> <div class="form-group" ng-if="config.chartType==\'Bar\'"> Bar Chart expects the labels to be an array of strings (ex: ["Pear","Banana", ... ]) and the data to be an array of arrays (ex: [[0,1,2, ...], [3,4,5, ...], ...]) </div> <div class="form-group" ng-if="config.chartType==\'Line\'"> Line Chart expects the labels to be an array of strings (ex: ["Pear","Banana", ... ]) and the data to be an array of arrays (ex: [[0,1,2, ...], [3,4,5, ...], ...]) </div> <div class="form-group" ng-if="config.chartType==\'Pie\'"> Pie Chart expects the labels to be an array of strings (ex: ["Pear","Banana", ... ]) and the data to be an array (ex: [0,1,2, ...] ) </div> <div class="form-group" ng-if="config.chartType==\'Doughnut\'"> Doughnut Chart expects the labels to be an array of strings (ex: ["Pear","Banana", ... ]) and the data to be an array (ex: [0,1,2, ...]) </div> <div class="form-group" ng-if="config.chartType==\'Radar\'"> Radar Chart expects the labels to be an array of strings (ex: ["Pear","Banana", ... ]) and the data to be an array of arrays (ex: [[0,1,2, ...], [3,4,5, ...], ...]) </div> <div class="form-group"> <label for="sample">Enter Formula for Labels</label> <div ui-codemirror ui-codemirror-opts="jsedit" ng-model="config.labelsFormula"></div> <label for="sample">Enter Formula for data</label> <div ui-codemirror ui-codemirror-opts="jsedit" ng-model="config.dataFormula"></div> </div> </form> <form role="form" ng-if="[\'Table\'].indexOf(config.chartType)!=-1"> <div class="form-group"> <div class="form-group"> Table expects the labels to be an array of strings (ex: ["Pear","Banana", ... ]) and the data to be an array of arrays (ex: [[0,1,2, ...], [3,4,5, ...], ...]) </div> <label for="sample">Enter Formula for Header</label> <div ui-codemirror ui-codemirror-opts="jsedit" ng-model="config.headerFormula"></div> <label for="sample">Enter Formula for data</label> <div ui-codemirror ui-codemirror-opts="jsedit" ng-model="config.dataFormula"></div> </div> </form> <form role="form" ng-if="config.chartType==\'GoogleMap\'"> <div class="form-group"> <div class="form-group"> Google Map Chart expects the center to be a place that can be geolocated. The scale is a the zoom level (integer between 1-10). The points to be an array of objects with name, latitude and longitude attribute (ex: [{ name:"City A", latitude: 2.3, longitude:3.4 }, ... ]). The routes need to be an array of objects with attribute origin (string), destination (string) path which is an array of objects with latitude and longitude attributes (ex: [{ origin: "Paris", destination: "Madrid", path:[{longitude:2.3,latitude:3.4},{longitude:2.3,latitude:3.4}]}, ...]) </div> <label for="sample">Center</label> <input type="text" class="form-control" ng-model="config.center"> <label for="sample">Scale</label> <input type="text" class="form-control" ng-model="config.scale"> <label for="sample">Enter Formula for Points</label> <div ui-codemirror ui-codemirror-opts="jsedit" ng-model="config.pointsFormula"></div> <label for="sample">Enter Formula for Routes</label> <div ui-codemirror ui-codemirror-opts="jsedit" ng-model="config.routesFormula"></div> </div> </form>'),$templateCache.put("views/main.html",'<div class="header"> <div class="navbar navbar-default" role="navigation"> <div class="container"> <div class="navbar-header"> <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#js-navbar-collapse"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" href="#/">TI Dashboard Builder</a> </div> <div class="collapse navbar-collapse"> <ul class="nav navbar-nav navbar-right"> <li> <a ng-click="loadModel()" href="#/"> <span class="glyphicon glyphicon-upload"></span> Load </a> </li> <li> <a ng-click="saveModel()" href="#/"> <span class="glyphicon glyphicon-save" aria-hidden="true"></span> FileSave</a></li>  </ul> <form class="navbar-form navbar-right" role="token"> <div class="form-group"> <input type="text" class="form-control" placeholder="Token" ng-model="token"> </div> </form> </div> </div> </div> </div> <div class="container"> <div class="row"> <adf-dashboard name="mydashboard" collapsible="false" structure="6-6" adf-model="dashboard.model"> </div> </div> <input style="visibility:hidden" type="file" id="inputFile">'),$templateCache.put("views/view.html",'<style>.angular-google-map-container {\n    height: 400px;\n  }</style> <div ng-if="chartType==\'Table\'"> <table class="table"> <thead> <tr> <th ng-repeat="label in header">{{label}}</th> </tr> </thead> <tbody> <tr ng-repeat="row in data"> <td ng-repeat="element in row"> {{row[$index]}} </td> </tr> </tbody> </table> </div> <div ng-if="chartType==\'Text\'"> <textarea class="col-md-12" style="height:400px">\n    {{data}}\n  </textarea> </div> <div ng-if="[\'Bar\',\'Line\',\'Pie\',\'Doughnut\',\'Radar\'].indexOf(chartType)!=-1"> <canvas id="base" class="chart-base" chart-type="chartType" data="data" labels="labels" legend="true"></canvas> </div> <ui-gmap-google-map ng-if="chartType==\'GoogleMap\'" center="map.center" zoom="map.zoom"> <ui-gmap-markers models="points" coords="\'self\'"> </ui-gmap-markers> <ui-gmap-polylines models="routes" path="\'path\'" stroke="\'stroke\'" geodesic="true"> </ui-gmap-polylines> </ui-gmap-google-map>')}]);